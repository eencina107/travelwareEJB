public List<PgeMenus> getPgeMenus(){
        List<PgeRoles> roles = this.getPgeRoles();
        List<PgeMenus> menusRol= new ArrayList(); //permisos recuperados con cada rol
        List<PgeMenus> menus = new ArrayList(); //permisos que seran retornados (suma de todos los permisosRol)
        PgeRoles rol;
        Iterator i= roles.iterator(); //iterador roles
        Iterator i2; //iterador permisosRol
        PgeMenus menu;
        
        while(i.hasNext()){
            rol= (PgeRoles) i.next();
            menusRol = rol.getPgeMenusList();
            i2=menusRol.iterator();
            while(i2.hasNext()){
                menu=(PgeMenus) i2.next();
                menus.add(menu);
            }
        }
        
        return menus;
    }


public List<PgeRoles> getPgeRoles(){
        if (this.pgeUsuRolesList != null){
            Iterator i = this.pgeUsuRolesList.iterator();
            List<PgeRoles> roles = null;
            PgeUsuRoles usuRolActual;
            PgeRoles rol;
            while (i.hasNext()){
                usuRolActual = (PgeUsuRoles) i.next();
                rol = usuRolActual.getPgeRoles();
                roles.add(rol);
            }
            return roles;
        }
        else
        {
            return null;
        }
    }

    @Override
    public int compareTo(PgeMenus m) {
        if (menId < m.getMenId()) {
            return -1;
        }
        else if (menId > m.getMenId()){
            return 1;
        }
        else{
            if (menSubId < m.getMenSubId()){
                return -1;
            }
            else if (menSubId > m.getMenSubId()){
                return 1;
            }
            else{
                return 0;
            }
        }
           
    }